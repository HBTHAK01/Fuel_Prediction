Steps for Repository setup:

1. Create a folder for the project, go to that folder, and run the git clone command.

-> git clone url

2. Install the virtual environnment tool.

-> pip install virtualenv

3. Create a new virtual environment inside the directory.

-> python3 -m venv env    or
-> python -m venv env

4. Activate the virtual environment.

-> source env/bin/activate      or
-> .\env\Scripts\activate

5. Install the dependencies.

-> pip install -r requirements.txt

-------------------------------------------------------------------


Some Rules/Recommendations:

1. Always activate the virtual environment before coding.

2. Check the branch you are in using the command --git branch--, and if not in your branch, checkout to your own branch using the command --git checkout ＜your branchname＞--, so the rule is always do the coding in your branch and push it to your remote branch in github.

3. Pull the code regularly using the command --git pull origin main-- to have the latest codebase.

4. In case of any package installation, make sure to add it to the requirements.txt file without fail using the command --pip freeze > requirements.txt--. Without this others will have issues running the app if the dependency is not installed.

5. To remain consistent, select only my name as the Code reviewer when you make a pull request.

---------------------------------------------------------------------


Format of Commits to integrate to JIRA:

1. Add all repository changes to Staging Area.

-> git add -A

2. Capture a Snapshot of the staged changes and integrate with JIRA.

-> git commit -m " <ignored text> <ISSUE_KEY> <ignored text> #comment <comment_string>"

Example: git commit -m " FPA-4 #comment Example commit"

3. Push your changes to Github.

-> git push origin <your branchname>

----------------------------------------------------------------------
